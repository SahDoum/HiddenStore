"""init

Revision ID: a7ce8c79b2ed
Revises: 
Create Date: 2024-08-01 19:06:28.728549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlmodel


import json
from sqlalchemy import TypeDecorator, VARCHAR


# revision identifiers, used by Alembic.
revision: str = 'a7ce8c79b2ed'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

class JSONListOfPairs(TypeDecorator):
    impl = VARCHAR

    def process_bind_param(self, value, dialect):
        if value is None:
            return None
        # Convert list of pairs to JSON string
        return json.dumps(value)

    def process_result_value(self, value, dialect):
        if value is None:
            return None
        # Convert JSON string back to list of pairs
        return json.loads(value)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('menu',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp_created', sa.DateTime(), nullable=False),
    sa.Column('timestamp_updated', sa.DateTime(), nullable=False),
    sa.Column('item', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('details', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp_created', sa.DateTime(), nullable=False),
    sa.Column('timestamp_updated', sa.DateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('telegram_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    op.create_table('orders',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp_created', sa.DateTime(), nullable=False),
    sa.Column('timestamp_updated', sa.DateTime(), nullable=False),
    sa.Column('items', JSONListOfPairs(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'USER_COMMENT', 'USER_REVIEW', 'PROCESSING', 'PACKED', 'COMPLETED', 'CANCELED', 'RETURNED', 'REFUNDED', 'FAILED', name='orderstatus'), nullable=False),
    sa.Column('comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('review', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_delivered', sa.Boolean(), nullable=False),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('user', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orders')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('menu')
    # ### end Alembic commands ###
